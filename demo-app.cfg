# ===========================================================
# TOML Application config file
# This is a demo config file. Rename to "app.cfg" for use
# ===========================================================


# the interval in which the app shall periodically run, in seconds
interval_seconds = 60


# User - the recipient of change notifications
[user]
name = "Test User"
mail = "user@test.com"


[logger]
verbosity = 3	# Log verbosity. Set to 1,2, or 3 (1 = only Errors are logged, 2 = Warnings, 3 = Info/All)
show_xpath_query_result = true	# Set to true or false - true if the jobs shall output their XPath query results. Use this for testing the provided XPath.


[database]
path = './watcher.db'	# File path to where the database shall be stored. Best keep this local to the executable.


# Email account to be used for sending notifications - this can be a different account than specified under 'User'
[mail_client]
server = "smtp.asdf.com"	# SMTP mail server
port = 587	# mail server port
password = "asdf"	# password for authentication - CAUTION: saving this here may be unsafe
name = "Max Mustermann"	# name to be used for sending
address = "maxmustermann@asdf.com"	# email address to be used for sending


# Jobs start here (multiple, note the double brackets [[]] as this is an array of arrays, refer to TOML specs)
[[jobs]]
name = "google sample"	# Descriptive name of the job which is solely used for debugging/logging
url = "https://www.google.com"	# URL to the webpage which shall be watched
local_path = "myLocalFiles/googletest.html"	# Local paths can also be specified instead of a web URL. This can be used for debugging and testing your XPath.
xpath = ""	# XPath Syntax to the page element
result_type = "string"	# Set to "number" or "string". Each job can either yield a string content (this is the default) or try to parse a number (double) from the content. 

[[jobs]]
name = "apfelhure sample"
url = "http://www.apfelhure.de"
xpath = "//div[@id='counter']"
result_type = "number"

[[jobs]]
name = "Local test sample"
url = ""
local_path = "Test/TestPage.html"
xpath = "//div[@class='blackDiv']/p"
result_type = "string"
